// LLVM IR to TOSA IR Conversion
// Generated by Complete LLVM2TOSA Converter
// Supports all 68 LLVM instructions -> 66 TOSA operations

module {
func.func @comprehensive_test() -> () {
  // Basic block: entry
  %cond = tosa.equal scalar_0, scalar_1 : (tensor<1xi1>, tensor<1xi1>) -> tensor<1xi1>
  result_2 = tosa.add scalar_3, scalar_4 : (tensor<1xi32>, tensor<1xi32>) -> tensor<1xi32>
  // Basic block: exit
  %final = tosa.add scalar_5, scalar_6 : (tensor<1xf32>, tensor<1xf32>) -> tensor<1xf32>
  // Basic block: process
  init_8 = tosa.const {value = dense<0> : tensor<1xf32>} : () -> tensor<1xf32>
  // Load: %a_val = load float, float* %input_a
  // Load: %b_val = load float, float* %input_b
  %sum = tosa.add scalar_9, scalar_10 : (tensor<1xf32>, tensor<1xf32>) -> tensor<1xf32>
  %product = tosa.mul %sum, scalar_11 : (tensor<1xf32>, tensor<1xf32>) -> tensor<1xf32>
  result_12 = tosa.add %product, init_8 : (tensor<1xi32>, tensor<1xi32>) -> tensor<1xi32>
  // Load: %result = load float, float* %temp
}

}
